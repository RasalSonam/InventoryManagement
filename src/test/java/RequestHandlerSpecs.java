import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

import junit.framework.Assert;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class RequestHandlerSpecs {
	private static Connection conn;
	private static ItemRepositorySupport support = new ItemRepositorySupport();

	@BeforeClass
	public static void setUp() throws ClassNotFoundException, SQLException {
		Class.forName("org.hsqldb.jdbcDriver");
		conn = DriverManager.getConnection("jdbc:hsqldb:mem:inventoryDb", "SA", "");
		support.createTableAndRepository();
		createItemRequestsTable(conn);
	}

	@After
	public void setUpAfterEveryTest() throws SQLException {
		conn.createStatement().execute("delete from item_requests");
		conn.createStatement().execute("delete from item");
	}

	@AfterClass
	public static void closeUp() throws SQLException {
		conn.createStatement().execute("drop table item_requests");
	}

	private static void createItemRequestsTable(Connection conn2)
			throws SQLException {
		StringBuilder createQuery = new StringBuilder();
		createQuery
				.append("create table item_requests")
				.append(" (id int generated by default as identity primary key, ")
				.append(" empId int not Null,")
				.append(" item_name varchar(50) not NULL, ")
				.append(" quantity int not NULL ,")
				.append(" requested_on datetime , ")
				.append(" status varchar(50) not Null) ");

		conn.createStatement().executeQuery(createQuery.toString());
	}

	@Test
	public void addRequest() {

		RequestHandler req = new RequestHandler(conn);
		Item item = new Item("pen", 10, 0);
		Request request = new Request(new Date(), "pending", item, 0);
		Assert.assertTrue(req.add(request));
	}

	@Test
	public void findPendingRequest() throws Exception {
		RequestHandler req = new RequestHandler(conn);
		Item item = new Item("pen", 10, 0);
		support.insert(item);
		Item pen = new Item("pen", 1, 0);
		Request request = new Request(new Date(), "pending", pen, 0);
		Request request1 = new Request(new Date(), "approved", pen, 0);
		req.add(request);
		req.add(request1);
		Assert.assertTrue(req.findPending().size()==1);
		Assert.assertTrue(request.equals(req.findPending().get(0)));
	}
	
	@Test
	public void reduceCountInItemTable() throws Exception {
		RequestHandler req = new RequestHandler(conn);
		int reducedQuantity =0;
		Item item = new Item("pen", 10, 0);
		support.insert(item);
		Item pen = new Item("pen", 1, 0);
		Request request = new Request(new Date(), "pending", pen, 0);
		Request request1 = new Request(new Date(), "approved", pen, 0);
		req.add(request);
		req.add(request1);
		ResultSet rs = conn.createStatement().executeQuery("select quantity from item where name = 'pen'");
		if (rs.next())  reducedQuantity =rs.getInt(1);
		Assert.assertEquals(8, reducedQuantity);
	}
	
	@Test
	public void requestGetsApproved() throws Exception {
		RequestHandler req = new RequestHandler(conn);
		Item item = new Item("rubber",10, 0);
		Date requestedOn= new Date();
		Request request = new Request(requestedOn, "pending", item, 0);
		req.add(request);
		assertTrue(req.approve(request));
	}
	
}
